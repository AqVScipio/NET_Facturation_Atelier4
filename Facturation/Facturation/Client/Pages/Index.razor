@page "/"
@using Facturation.Shared
@inject HttpClient Http

<h1>Tableau de bord</h1>

@if (dashboard == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>CA : <strong>@dashboard.CA €</strong></h2>
    <h3>Perçu : <strong>@dashboard.Percu €</strong> - Restant à recouvrir : <strong>@(dashboard.CA - dashboard.Percu) €</strong></h3>

    <EditForm Model="@research" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h5>Sélectionner la période : </h5>
        <p>
            Entre <InputDate @bind-Value="research.DateMin" /> et <InputDate @bind-Value="research.DateMax" />
            <button type="submit">Go</button>
        </p>
    </EditForm>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Montant</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in dashboard.MontantDus)
            {
                <tr>
                    <td>@f.Date.ToShortDateString()</td>
                    <td>@f.Montant</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DashboardDto dashboard;
    private DashboardResearch research = new DashboardResearch();

    protected override async Task OnInitializedAsync()
    {
        dashboard = await Http.GetFromJsonAsync<DashboardDto>("api/dashboard");
    }

    private async Task HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("api/dashboard", research);
        //dashboard = response.Content.ReadFromJsonAsync<DashboardDto>().Result;
        //StateHasChanged();
    }
}
